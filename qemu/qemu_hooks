#!/usr/bin/env bash
#
# Author: SharkWipf
#
# Copy this file to /etc/libvirt/hooks, make sure it's called "qemu".
# After this file is installed, restart libvirt.
# From now on, you can easily add per-guest qemu hooks.
# Add your hooks in /etc/libvirt/hooks/qemu.d/vm_name/hook_name/state_name.
# For a list of available hooks, please refer to https://www.libvirt.org/hooks.html
#

# Function to log the arguments passed to the script
log_arguments() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') Arguments: GUEST_NAME=$1 | HOOK_NAME=$2 | STATE_NAME=$3 | MISC=${@:4} | BASEDIR=$(dirname $0) | HOOKPATH=$BASEDIR/qemu.d/$GUEST_NAME/$HOOK_NAME/$STATE_NAME" >> "$DEBUG_LOG"
}

# Function to log messages
log_message() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') $1" >> "$DEBUG_LOG"
}

DEBUG_LOG="/etc/libvirt/hooks/qemu_hooks_debug.txt"

GUEST_NAME="$1"
HOOK_NAME="$2"
STATE_NAME="$3"
MISC="${@:4}"

BASEDIR="$(dirname $0)"

HOOKPATH="$BASEDIR/qemu.d/$GUEST_NAME/$HOOK_NAME/$STATE_NAME"

# log_arguments "$@"

set -e # If a script exits with an error, we should as well.

# Check if it's a non-empty executable file
if [ -f "$HOOKPATH" ] && [ -s "$HOOKPATH" ] && [ -x "$HOOKPATH" ]; then
    # log_message "Executing file: $HOOKPATH"
    eval "\"$HOOKPATH\" \"$@\""
elif [ -d "$HOOKPATH" ]; then
    # log_message "Entering directory: $HOOKPATH"
    while IFS= read -r file; do
        # Check for null string
        if [ ! -z "$file" ]; then
            # log_message "Executing file in directory: $file"
            eval "\"$file\" \"$@\""
        fi
    done <<< "$(find -L "$HOOKPATH" -maxdepth 1 -type f -executable -print;)"
# else
#     log_message "No valid hook found at: $HOOKPATH"
fi
